apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: host-firewall-basic
spec:
  nodeSelector:
    matchLabels: { }
  ingress:
    - toPorts:
        - ports:
            - port: "22" # SSH
              protocol: TCP
            - port: "41641" # Tailscale
              protocol: UDP
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: control-plane
spec:
  nodeSelector:
    matchLabels:
      node-role.kubernetes.io/control-plane: "true"
  ingress:
    # Operators
    - fromEntities:
        - cluster
      toPorts:
        - ports:
            - port: "6443" # kube-apiserver
              protocol: TCP

    # External Access
    - fromCIDR:
        - fd7a:115c:a1e0::/48
        - 100.64.0.0/10
      toPorts:
        - ports:
            - port: "6443" # kube-apiserver
              protocol: TCP

    # etcd peer -> etcd peer
    - fromEntities:
        - remote-node
      toPorts:
        - ports:
            - port: '2380'
              protocol: TCP
#  egress:
#    # etcd peer -> etcd peer
#    - toEntities:
#        - remote-node
#      toPorts:
#        - ports:
#            - port: '2380'
#              protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: kubelet
spec:
  nodeSelector:
    # apply to all nodes
    matchLabels: { }
  ingress:
    # api server -> kubelet
    #    - fromEntities:
    #        - kube-apiserver
    - toPorts:
        - ports:
            - port: '10250'
              protocol: TCP
#  egress:
#    # kubelet -> load balancer
#    - toCIDR:
#        - $LB_IP/32
#      toPorts:
#        - ports:
#            - port: '6443'
#              protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: cilium-health
specs:
  - endpointSelector:
      # apply to health endpoints
      matchLabels:
        reserved:health: ''
    ingress:
      # cilium agent -> cilium agent
      - fromEntities:
          - host
          - remote-node
        toPorts:
          - ports:
              - port: '4240'
                protocol: TCP
  - nodeSelector:
      # apply to all nodes
      matchLabels: { }
    ingress:
      # cilium agent -> cilium agent
      - fromEntities:
          - health
          - remote-node
        toPorts:
          - ports:
              - port: '4240'
                protocol: TCP
#    egress:
#      # cilium agent -> cilium agent
#      - toEntities:
#          - health
#          - remote-node
#        toPorts:
#          - ports:
#              - port: '4240'
#                protocol: TCP