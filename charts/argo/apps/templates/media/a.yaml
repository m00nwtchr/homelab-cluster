apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-postgres
  namespace: media
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  # At the time of writing, immich is only compatible with pgvecto.rs <0.4. Latest postgres image with that version is 16.5.
{{/*  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.5-v0.3.0@sha256:be3f025d79aa1b747817f478e07e71be43236e14d00d8a9eb3914146245035ba*/}}
{{/*  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:14-v0.2.0@sha256:5fa56b8459e6d1cc8a4aeda22850eb05ac1d5cf410219eab3ceac0b1e010fba5*/}}
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:15-v0.2.0@sha256:932cd85d7d68f81636b608a3ac7b49842063469903ba04725d9a4c1364f7f653
  instances: 1

  postgresql:
    shared_preload_libraries:
      - "vectors.so"

  bootstrap:
    initdb:
      owner: immich
      database: immich
      secret:
        name: immich-postgres-user
      import:
        type: microservice
        databases:
          - immich
        source:
          externalCluster: cluster-immich
      postInitSQL:
        - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - CREATE EXTENSION IF NOT EXISTS "cube" CASCADE;
        - CREATE EXTENSION IF NOT EXISTS "earthdistance" CASCADE;

  externalClusters:
    - name: cluster-immich
      connectionParameters:
        host: immich-pgdb-service.media.svc
        user: immich
        dbname: immich
      password:
        name: postgres-immich-superuser
        key: password

  storage:
    size: 4Gi