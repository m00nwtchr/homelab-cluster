app-template:
  controllers:
    radarr:
      pod:
        securityContext:
          runAsUser: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          fsGroup: 2000
          fsGroupChangePolicy: "OnRootMismatch"
      #          supplementalGroups:
      #            - 65542 # gladius:external-services

      containers:
        app:
          image:
            repository: ghcr.io/onedr0p/radarr-develop
            tag: 5.19.3.9730@sha256:dd64f1786f50ae79013822ce196e3e7bd20db369bd51d63d63c42f7821b77317
          env:
            RADARR__APP__INSTANCENAME: Radarr
            RADARR__AUTH__APIKEY:
              valueFrom:
                secretKeyRef:
                  name: radarr-secret
                  key: api_key
            RADARR__AUTH__METHOD: External
            RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
            RADARR__LOG__DBENABLED: "False"
            RADARR__LOG__LEVEL: info
            RADARR__SERVER__PORT: &port 7878
            RADARR__UPDATE__BRANCH: develop
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /ping
                  port: *port
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
          resources:
            requests:
              cpu: 20m
              memory: 384Mi
            limits:
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

  service:
    app:
      controller: radarr
      ipFamilyPolicy: PreferDualStack
      ports:
        http:
          targetPort: *port
          port: 80

  # ingress:
  #   app:
  #     annotations:
  #       traefik.ingress.kubernetes.io/router.middlewares: traefik-vpn-only@kubernetescrd,traefik-auth@kubernetescrd
  #     hosts:
  #       - host: radarr.svc.m00nlit.dev
  #         paths:
  #           - path: /
  #             service:
  #               identifier: app
  #               port: http

  persistence:
    config:
      size: 1Gi
      accessMode: ReadWriteOnce
      annotations:
        argocd.argoproj.io/sync-options: Delete=false
    add-ons:
      type: emptyDir
    config-logs:
      type: emptyDir
      globalMounts:
        - path: /config/logs
    tmp:
      type: emptyDir
    media:
      existingClaim: media
      globalMounts:
        - path: /mnt/media
        - path: /media
