app-template:
  controllers:
    sonarr:
      annotations:
        reloader.stakater.com/auto: "true"

      pod:
        securityContext:
          runAsUser: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          fsGroup: 2000
          fsGroupChangePolicy: "OnRootMismatch"
          supplementalGroups:
            - 65542 # gladius:external-services

      initContainers:
        disable-ipv6:
          args:
            - -w
            - net.ipv6.conf.all.disable_ipv6=1
          command:
            - /bin/sysctl
          image:
            repository: docker.io/busybox
            tag: latest
            pullPolicy: IfNotPresent
          securityContext:
            privileged: true

      containers:
        app:
          image:
            repository: ghcr.io/onedr0p/sonarr-develop
            tag: 4.0.12.2900@sha256:e4de8879c00d0d5ac2d616e325259cf0afef0b3715fcdcf081292c25c5072760
          env:
            SONARR__APP__INSTANCENAME: Sonarr
            SONARR__AUTH__APIKEY:
              valueFrom:
                secretKeyRef:
                  name: sonarr-secret
                  key: api_key
            SONARR__AUTH__METHOD: External
            SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
            #            SONARR__LOG__DBENABLED: "False"
            SONARR__LOG__LEVEL: trace
            SONARR__SERVER__PORT: &port 8989
            SONARR__UPDATE__BRANCH: develop
          probes:
            liveness: &probes
              enabled: false
              custom: true
              spec:
                httpGet:
                  path: /ping
                  port: *port
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
          resources:
            requests:
              cpu: 20m
              memory: 384Mi
          #            limits:
          #              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

  service:
    app:
      ipFamilyPolicy: SingleStack
      ipFamilies: [ IPv4 ]
      controller: sonarr
      ports:
        http:
          targetPort: *port
          port: 80

  ingress:
    app:
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: traefik-vpn-only@kubernetescrd
      hosts:
        - host: sonarr.svc.m00nlit.dev
          paths:
            - path: /
              service:
                identifier: app
                port: http

  persistence:
    config:
      size: 1Gi
      accessMode: ReadWriteOnce
      annotations:
        argocd.argoproj.io/sync-options: Delete=false
    add-ons:
      type: emptyDir
    tmp:
      type: emptyDir
    media:
      existingClaim: media
      globalMounts:
        - path: /mnt/media
        - path: /media