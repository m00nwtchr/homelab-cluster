apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: mautrix-{{ .Values.bridge.type }}
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: mautrix-{{ .Values.bridge.type }}
  template:
    metadata:
      labels:
        app: mautrix-{{ .Values.bridge.type }}
    spec:
      containers:
        - name: mautrix-{{ .Values.bridge.type }}
          image: "{{ .Values.image.repository }}/{{ .Values.bridge.type }}:{{ .Values.image.tag }}"
          command: [ "/usr/bin/mautrix-{{ .Values.bridge.type }}" ]
          args: [ "-c", "/config/config.yaml", "--no-update" ]
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: mautrix-{{ .Values.bridge.type }}-data
              mountPath: /data/
          resources: {{ toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          secret:
            secretName: {{ .Release.Name }}-config
            items:
              - key: config.yaml
                path: config.yaml
  volumeClaimTemplates:
    - metadata:
        name: mautrix-{{ .Values.bridge.type }}-data
        annotations:
          argocd.argoproj.io/sync-options: Delete=false
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
