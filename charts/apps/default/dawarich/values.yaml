app-template:
  controllers:
    dawarich:
      containers:
        app: &bapp
          image:
            repository: freikin/dawarich
            tag: 0.25.9@sha256:487dfe589330ed4688c1c94b95f29a0e00272954d902c520ecf8a05a3cad7cc2
          env:
            # RAILS_ENV: production
            RAILS_ENV: development
            TIME_ZONE: "Europe/Warsaw"
            #            REDIS_URL: redis://dragonfly.database.svc.cluster.local
            REDIS_URL: redis://localhost:6379
            APPLICATION_HOSTS: "dawarich.svc.m00nlit.dev"
            APPLICATION_PROTOCOL: http
            MIN_MINUTES_SPENT_IN_CITY: 60
            DISTANCE_UNIT: km
            ROMETHEUS_EXPORTER_ENABLED: false
            PROMETHEUS_EXPORTER_HOST: 0.0.0.0
            PROMETHEUS_EXPORTER_PORT: 9394
            ENABLE_TELEMETRY: false # More on telemetry: https://dawarich.app/docs/tutorials/telemetry
            SELF_HOSTED: "true"
          envFrom:
            - secretRef:
                name: dawarich-db-secret
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "3Gi"
          command:
            - "web-entrypoint.sh"
          args:
            - "bin/rails server -p 3000 -b ::"
        sidekick:
          <<: *bapp
          command:
            - "sidekiq-entrypoint.sh"
          args:
            - "bundle exec sidekiq"
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "3Gi"
        valkey:
          image:
            repository: docker.io/valkey/valkey
            tag: 8.1.1-alpine@sha256:f43639a6811342b5db26475f3463d4d1950d07bf05542d9483159a44be1fe62f
  service:
    app:
      controller: dawarich
      ports:
        http:
          port: 80
          targetPort: 3000
  ingress:
    app:
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Home
        gethomepage.dev/name: Dawarich
        gethomepage.dev/icon: google-maps.png
        # external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
      hosts:
        - host: "{{ .Release.Name }}.svc.m00nlit.dev"
          paths:
            - path: /
              service:
                identifier: app
                port: http
  # persistence:
  #   config:
  #     enabled: true
  #     existingClaim: *app
  #     globalMounts:
  #       - path: /config
