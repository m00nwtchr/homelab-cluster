apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 68.2.1
    helm:
      valuesObject:
{{/*        server:*/}}
{{/*          extraScrapeConfigs: |*/}}
{{/*            - job_name: 'kubernetes-pods'*/}}
{{/*              kubernetes_sd_configs:*/}}
{{/*                - role: pod*/}}
{{/*              relabel_configs:*/}}
{{/*                - source_labels: [__meta_kubernetes_pod_label_app]*/}}
{{/*                  action: keep*/}}
{{/*                  regex: .+*/}}
  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-adapter
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: prometheus-adapter
    targetRevision: 4.11.0
    helm:
      valuesObject:
        prometheus:
          url: http://prometheus.monitoring.svc

        rules:
          resource:
            cpu:
              containerQuery: |
                sum by (<<.GroupBy>>) (
                  rate(container_cpu_usage_seconds_total{container!="",<<.LabelMatchers>>}[3m])
                )
              nodeQuery: |
                sum  by (<<.GroupBy>>) (
                  rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",<<.LabelMatchers>>}[3m])
                )
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod:
                    resource: pod
              containerLabel: container
            memory:
              containerQuery: |
                sum by (<<.GroupBy>>) (
                  avg_over_time(container_memory_working_set_bytes{container!="",<<.LabelMatchers>>}[3m])
                )
              nodeQuery: |
                sum by (<<.GroupBy>>) (
                  avg_over_time(node_memory_MemTotal_bytes{<<.LabelMatchers>>}[3m])
                  -
                  avg_over_time(node_memory_MemAvailable_bytes{<<.LabelMatchers>>}[3m])
                )
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod:
                    resource: pod
              containerLabel: container
            window: 3m

  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true