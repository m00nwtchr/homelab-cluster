---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/grafana.integreatly.org/grafana_v1beta1.json
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    grafana.internal/instance: grafana
spec:
  config:
    analytics:
      check_for_updates: "false"
      check_for_plugin_updates: "false"
      feedback_links_enabled: "false"
      reporting_enabled: "false"
    auth:
      disable_login_form: "false"
    auth.anonymous:
      enabled: "true"
    auth.generic_oauth:
      enabled: "true"
      name: Kanidm
      client_id: grafana
      # client_secret: $__file{/etc/secrets/auth_generic_oauth/client-secret}

      scopes: openid,profile,email,groups
      auth_url: https://idm.${SECRET_DOMAIN}/ui/oauth2
      token_url: https://idm.${SECRET_DOMAIN}/oauth2/token
      api_url: https://idm.${SECRET_DOMAIN}/oauth2/openid/grafana/userinfo
      use_pkce: "true"
      use_refresh_token: "true"
      allow_sign_up: "true"
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      role_attribute_path: contains(grafana_role[*], 'GrafanaAdmin') && 'GrafanaAdmin' || contains(grafana_role[*], 'Admin') && 'Admin' || contains(grafana_role[*], 'Editor') && 'Editor' || 'Viewer'
      allow_assign_grafana_admin: "true"
    log:
      mode: console
    metrics:
      enabled: "true"
    news:
      news_feed_enabled: "false"
    plugins:
      plugin_admin_enabled: "false"
    security:
      angular_support_enabled: "true"
    server:
      enable_gzip: "true"
      root_url: https://grafana.${SECRET_DOMAIN}
  deployment:
    spec:
      strategy:
        type: Recreate
      template:
        spec:
          containers:
            - name: grafana
              env:
                - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: kanidm-grafana-oidc
                      key: client-secret
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities: { drop: ["ALL"] }
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: zfs-spark
  disableDefaultSecurityContext: All
