---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-config:
            image:
              repository: ghcr.io/home-operations/k8s-sidecar
              tag: 1.30.10@sha256:dd3b1f0c4e6b4512b2deb50c58acf65fd0f0927120a59a95eec854d32a6c9ce3
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.27.0@sha256:5091320d752756d7ac0a094d26ac38eb8216d7ed5857642b305522d1c6641f72
            env:
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              GATUS_WEB_PORT: &port 8080
              GATUS_WEB_ADDRESS: "::"
              TZ: ${TZ}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 256Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

    service:
      app:
        ports:
          http:
            port: 80
            targetPort: *port

    serviceMonitor:
      app:
        endpoints:
          - port: http

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
          - "status.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https

    rbac:
      roles:
        *app :
          type: ClusterRole
          rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
                - secrets
              verbs:
                - get
                - watch
                - list
      bindings:
        *app :
          type: ClusterRoleBinding
          roleRef:
            identifier: *app
          subjects:
            - identifier: *app
    serviceAccount:
      *app : { }

    persistence:
      config:
        type: emptyDir

      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
