---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      annotations:
        kubectl.kubernetes.io/default-container: *app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - *app
                topologyKey: kubernetes.io/hostname

      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 9.9.9.9
        options:
          - name: ndots
            value: '1'

    controllers:
      pihole:
        type: statefulset
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 1
          surge: 1

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch

        containers:
          pihole:
            image:
              repository: ghcr.io/pi-hole/pihole
              tag: 2025.08.0@sha256:90a1412b3d3037d1c22131402bde19180d898255b584d685c84d943cf9c14821
            env:
              TZ: '${TZ}'
              DNSMASQ_USER: 'root'
              FTLCONF_dns_listeningMode: all
              FTLCONF_dns_port: &dns-port 53
              FTLCONF_dns_dnssec: 'true'
              FTLCONF_dns_upstreams: 2001:cafe:43::c
              FTLCONF_dns_revServers: 'true,192.168.0.0/24,192.168.0.1;true,100.64.0.0/10,100.100.100.100,tail096cd8.ts.net'
              FTLCONF_dns_specialDomains_mozillaCanary: true
              FTLCONF_webserver_interface_boxed: false
              FTLCONF_webserver_interface_theme: default-auto
              FTLCONF_webserver_port: "[::]:8080"
              FTLCONF_webserver_api_password: &pihole-password
                valueFrom:
                  secretKeyRef:
                    name: pihole-secret
                    key: password
            #          probes:
            #            liveness: &pihole-probes
            #              enabled: true
            #              custom: true
            #              spec:
            #                exec:
            #                  command:
            #                    - /usr/bin/nslookup
            #                    - example.com
            #                    - '::1'
            #            startup: *pihole-probes
            #            readiness: *pihole-probes
            resources:
              requests:
                cpu: 100m
              limits:
                # looking at the query log can spike the memory usage very high
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - CAP_NET_BIND_SERVICE
                  - CAP_CHOWN

          exporter:
            image:
              repository: ekofr/pihole-exporter
              tag: v1.2.0@sha256:242c53ef3c24b88fcbe8184390b456d05604bd50de5732ca3fd3eb24395585b3
            env:
              PIHOLE_HOSTNAME: localhost
              PIHOLE_PORT: &pihole-port 8080
              PIHOLE_PASSWORD: *pihole-password
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 32Mi
            probes:
              liveness: &exporter-probes
                enabled: true
                custom: true
                spec:
                  failureThreshold: 3
                  initialDelaySeconds: 10
                  periodSeconds: 20
                  successThreshold: 1
                  tcpSocket:
                    port: &exporter-port 9617
                  timeoutSeconds: 1
              readiness: *exporter-probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ 'ALL' ] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000



    service:
      http:
        controller: *app
        forceRename: *app
        ports:
          http:
            primary: true
            port: 80
            targetPort: *pihole-port
            protocol: HTTP
          prometheus:
            port: *exporter-port
            protocol: HTTP

      dns:
        controller: *app
        type: LoadBalancer
        ipFamilyPolicy: PreferDualStack
        annotations:
          metallb.io/loadBalancerIPs: 'fd42:78a5:2c09::53,192.168.0.53'
        #          lbipam.cilium.io/ips: 'fd42:78a5:2c09::53,192.168.0.53'
        ports: &lb-ports
          dns-udp:
            port: 53
            targetPort: *dns-port
            protocol: UDP
          dns-tcp:
            port: 53
            targetPort: *dns-port
            protocol: TCP
      dns-ts:
        controller: *app
        type: LoadBalancer
        loadBalancerClass: "tailscale"
        ports: *lb-ports

    route:
      app:
        hostnames: [ "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Pi-Hole
          gethomepage.dev/icon: pi-hole.svg
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.version: "6"
          gethomepage.dev/widget.url: "http://pihole.dns.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_PIHOLE_KEY}}\" }}"
        parentRefs:
          - name: internal
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: http
                port: 80

    serviceMonitor:
      app:
        serviceName: http
        endpoints:
          - port: prometheus
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app
        globalMounts:
          - path: /etc/pihole/
