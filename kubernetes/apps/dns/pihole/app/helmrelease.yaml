---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      annotations:
        kubectl.kubernetes.io/default-container: *app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - *app
                topologyKey: kubernetes.io/hostname

      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 9.9.9.9
        options:
          - name: ndots
            value: '1'

    controllers:
      pihole:
        type: statefulset
        strategy: RollingUpdate
        rollingUpdate:
          unavailable: 1
          surge: 1

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch

        containers:
          pihole:
            image:
              repository: ghcr.io/pi-hole/pihole
              tag: 2025.06.1@sha256:7d8f83d8a904b25c6074c0798c106067e3a4f2e2caeea15791326f214566b47e
            env:
              TZ: '${TZ}'
              DNSMASQ_USER: 'root'
              FTLCONF_dns_listeningMode: all
              FTLCONF_dns_port: &dns-port 53
              FTLCONF_dns_dnssec: 'true'
              FTLCONF_dns_upstreams: 2001:cafe:43::f497
              FTLCONF_dns_revServers: 'true,192.168.0.0/24,192.168.0.1;true,100.64.0.0/10,100.100.100.100,tail096cd8.ts.net'
              FTLCONF_dns_specialDomains_mozillaCanary: true
              FTLCONF_webserver_interface_boxed: false
              FTLCONF_webserver_interface_theme: default-auto
              FTLCONF_webserver_port: "[::]:8080"
              FTLCONF_webserver_api_password: &pihole-password
                valueFrom:
                  secretKeyRef:
                    name: pihole-secret
                    key: password
            #          probes:
            #            liveness: &pihole-probes
            #              enabled: true
            #              custom: true
            #              spec:
            #                exec:
            #                  command:
            #                    - /usr/bin/nslookup
            #                    - example.com
            #                    - '::1'
            #            startup: *pihole-probes
            #            readiness: *pihole-probes
            resources:
              requests:
                cpu: 100m
              limits:
                # looking at the query log can spike the memory usage very high
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - CAP_NET_BIND_SERVICE
                  - CAP_CHOWN

          exporter:
            image:
              repository: ekofr/pihole-exporter
              tag: v1.0.1@sha256:c33eec2a8308fa510608b93d4921bb62f75f6132f8792b24e63972835f624496
            env:
              PIHOLE_HOSTNAME: localhost
              PIHOLE_PORT: &pihole-port 8080
              PIHOLE_PASSWORD: *pihole-password
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 32Mi
            probes:
              liveness: &exporter-probes
                enabled: true
                custom: true
                spec:
                  failureThreshold: 3
                  initialDelaySeconds: 10
                  periodSeconds: 20
                  successThreshold: 1
                  tcpSocket:
                    port: &exporter-port 9617
                  timeoutSeconds: 1
              readiness: *exporter-probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000



    service:
      dns:
        controller: *app
        type: LoadBalancer
        ipFamilyPolicy: PreferDualStack
        annotations:
          metallb.io/loadBalancerIPs: 'fd42:78a5:2c09::53,192.168.0.53'
#          lbipam.cilium.io/ips: 'fd42:78a5:2c09::53'
#        externalIPs:
#          - 100.116.45.53 # Tailscale
        ports:
          dns-udp:
            port: 53
            targetPort: *dns-port
            protocol: UDP
          dns-tcp:
            port: 53
            targetPort: *dns-port
            protocol: TCP
      http:
        controller: *app
        forceRename: *app
        ports:
          http:
            primary: true
            port: 80
            targetPort: *pihole-port
            protocol: HTTP
          prometheus:
            port: *exporter-port
            protocol: HTTP

    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Pi-Hole
          gethomepage.dev/icon: pi-hole.svg
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.version: "6"
          gethomepage.dev/widget.url: "http://pihole.dns.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_PIHOLE_KEY}}\" }}"
        hosts:
          - host: "${APP}.svc.${SECRET_DOMAIN}"
            paths:
              - path: /admin
                service:
                  identifier: http
                  port: http
              - path: /api
                service:
                  identifier: http
                  port: http

    #  route:
    #    app:
    #      hostnames:
    #        - '{{ .Release.Name }}.${SECRET_DOMAIN}'
    #      parentRefs:
    #        - name: internal
    #          namespace: network
    #          sectionName: https
    #      rules:
    #        - backendRefs:
    #            - name: *app
    #              port: *pihole-port
    #          sessionPersistence:
    #            sessionName: *app
    #            type: Cookie
    #            absoluteTimeout: 35m
    #      annotations:
    #        gethomepage.dev/enabled: 'true'
    #        gethomepage.dev/group: Infrastructure
    #        gethomepage.dev/name: Pi-Hole
    #        gethomepage.dev/icon: pi-hole.svg

    serviceMonitor:
      app:
        serviceName: http
        endpoints:
          - port: prometheus
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app
        globalMounts:
          - path: /etc/pihole/

  #    config-map:
  #      type: configMap
  #      advancedMounts:
  #        pihole:
  #          pihole:
  #            - path: /etc/dnsmasq.d/02-custom.conf
  #              subPath: 02-custom.conf
  #              readOnly: true
  #            - path: /etc/dnsmasq.d/03-hosts.conf
  #              subPath: 03-hosts.conf
  #              readOnly: truea
