---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dawarich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      dawarich:
        containers:
          app: &bapp
            image:
              repository: mirror.gcr.io/freikin/dawarich
              tag: 0.32.0@sha256:4cb9bd4e05dbea4cf5176c2d07c613c10bff231e487e2a95ab978fd7e3e7c174
            env:
              # RAILS_ENV: production
              RAILS_ENV: development
              TIME_ZONE: "${TZ}"
              REDIS_URL: redis://dragonfly.database.svc
              APPLICATION_HOSTS: "{{ .Release.Name }}.${SECRET_DOMAIN}"
              APPLICATION_PROTOCOL: http
              MIN_MINUTES_SPENT_IN_CITY: 60
              DISTANCE_UNIT: km
              ROMETHEUS_EXPORTER_ENABLED: false
              PROMETHEUS_EXPORTER_HOST: 0.0.0.0
              PROMETHEUS_EXPORTER_PORT: 9394
              ENABLE_TELEMETRY: false # More on telemetry: https://dawarich.app/docs/tutorials/telemetry
              SELF_HOSTED: "true"

              DATABASE_HOST: dawarich-db-rw.postgres.svc.cluster.local
              DATABASE_NAME: dawarich
              DATABASE_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: postgres-dawarich
                    key: username
              DATABASE_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: postgres-dawarich
                    key: password
            #          envFrom:
            #            - secretRef:
            #                name: dawarich-db-secret
            resources:
              requests:
                memory: "1Gi"
                cpu: "250m"
              limits:
                memory: "3Gi"
            command:
              - "web-entrypoint.sh"
            args:
              - "bin/rails server -p 3000 -b ::"
          sidekick:
            <<: *bapp
            command:
              - "sidekiq-entrypoint.sh"
            args:
              - "bundle exec sidekiq"
            resources:
              requests:
                memory: "1Gi"
                cpu: "250m"
              limits:
                memory: "3Gi"

    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: 3000

    route:
      app:
        hostnames: [ "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Dawarich
          gethomepage.dev/icon: google-maps.png
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80
