---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.34.3@sha256:84fd8a47f58d79a1ad824c27be0a9492750c0fa5216b35c749863093bfa3c3d7
            env:
              DOMAIN: https://${APP}.${SECRET_DOMAIN}
              TZ: ${TZ}
              SIGNUPS_ALLOWED: true
              WEBSOCKET_ENABLED: true
              #              SMTP_HOST: ${ROUTER_IP}
              #              SMTP_PORT: 25
              #              SMTP_FROM: admin@${SECRET_DOMAIN}
              #              SMTP_SECURITY: "off"
              ROCKET_ADDRESS: "::"
              ROCKET_PORT: &port 8080
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-postgres
                    key: POSTGRES_URL

              SSO_ENABLED: true
              SSO_ONLY: true
              SSO_AUTHORITY: https://idm.${SECRET_DOMAIN}/oauth2/openid/${APP}
              SSO_CLIENT_ID: *app
            envFrom:
              - secretRef:
                  name: *app
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 100Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: *port

    route:
      app:
        hostnames: [ "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80

    ingress:
      app:
        hosts:
          - host: &host ${APP}.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      admin:
        hosts:
          - host: *host
            paths:
              - path: /admin
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: *app
