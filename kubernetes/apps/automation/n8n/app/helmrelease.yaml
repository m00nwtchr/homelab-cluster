---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  dependsOn:
    - name: openebs
      namespace: openebs-system
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.107.0@sha256:5cf377fa49b134faede040f3ed2262e256a25dda54798be6445203fdd0efaaf9
            env:
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: ${TZ}
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &hostName ${APP}.${SECRET_DOMAIN}
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console

              N8N_RUNNERS_ENABLED: true

              DB_TYPE: postgresdb
              DB_POSTGRESDB_DATABASE: *app
              DB_POSTGRESDB_HOST: postgres-rw.postgres.svc
              DB_POSTGRESDB_USER:
                valueFrom:
                  secretKeyRef:
                    name: postgres-${APP}
                    key: username
              DB_POSTGRESDB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: postgres-${APP}
                    key: password
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    service:
      app:
        ports:
          http:
            port: 80
            targetPort: *port

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /home/node/.n8n

    route:
      app:
        hostnames:
          - *hostName
        parentRefs:
          - name: internal
            namespace: envoy-gateway-system
            sectionName: https

      webhook:
        hostnames:
          - ${APP}-webhook.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /webhook
            backendRefs: [ { } ]
