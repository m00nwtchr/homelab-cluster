---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      jellyfin:
        type: statefulset

        pod:
          #        nodeSelector:
          #          intel.feature.node.kubernetes.io/gpu: "true"
          #          annotations:
          #            k8s.v1.cni.cncf.io/networks: |
          #              [{
          #                "name":"multus-lan",
          #                "namespace": "network"
          #              }]

          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 44
              - 109
              - 65542 # gladius:external-services

        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_PublishedServerUrl:
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                #                nvidia.com/gpu: 1
                memory: 512Mi
              limits:
                #                nvidia.com/gpu: 1
                memory: 8Gi

    service:
      app:
        controller: *app
        type: LoadBalancer
        #        annotations:
        #        lbipam.cilium.io/ips: 10.1.1.133
        ports:
          http:
            port: 80
            targetPort: *port

    route:
      app:
        hostnames: [ "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Jellyfin
          gethomepage.dev/icon: jellyfin.svg
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.enableBlocks: "true"
          gethomepage.dev/widget.url: "http://jellyfin.media.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_JELLYFIN_KEY}}\" }}"
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app
      metadata:
        size: 10Gi
        accessMode: ReadWriteOnce
        suffix: "metadata"
        globalMounts:
          - path: /metadata
            subPath: metadata
          - path: /config/data/introskipper
            subPath: introskipper

      media:
        existingClaim: media
        globalMounts:
          - path: /mnt/media

      tmpfs:
        type: emptyDir
        advancedMounts:
          jellyfin:
            app:
              - path: /cache
                subPath: cache
              - path: /transcode
                subPath: transcode
