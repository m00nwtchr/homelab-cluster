---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyseerr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: mirror.gcr.io/fallenbagel/jellyseerr
              tag: preview-OIDC@sha256:9f3195998306da6548fc3b2420d114dda64a6e904f41e911168788fb410a7972
            env:
              LOG_LEVEL: info
              PORT: &port 8080
              TZ: ${TZ}

              #              HOST: "::"

              API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: *app
                    key: api_key

              DB_TYPE: postgres
              DB_HOST: postgres-rw.postgres.svc
              DB_USER: *app
              DB_PASS:
                valueFrom:
                  secretKeyRef:
                    name: postgres-${APP}
                    key: password
            #            envFrom:
            #              - secretRef:
            #                  name: "{{ .Release.Name }}-secret"
            #            probes:
            #              liveness: &probes
            #                enabled: true
            #                custom: true
            #                spec:
            #                  httpGet:
            #                    path: /api/v1/status
            #                    port: *port
            #                  initialDelaySeconds: 0
            #                  periodSeconds: 10
            #                  timeoutSeconds: 1
            #                  failureThreshold: 3
            #              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 512Mi # TODO
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }

    defaultPodOptions:
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch

    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /app/config

      cache:
        type: emptyDir
        globalMounts:
          - path: /app/config/cache

      tmpfs:
        type: emptyDir
        advancedMounts:
          *app :
            app:
              - path: /app/config/logs
                subPath: logs
              - path: /tmp
                subPath: tmp

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
#          - name: external
#            namespace: network
#            sectionName: https
          - name: internal
            namespace: network
            sectionName: https

    service:
      app:
        ipFamilies: [ IPv4 ]
        ports:
          http:
            port: 80
            targetPort: *port
