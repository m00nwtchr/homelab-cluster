---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        type: statefulset
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"
        #          supplementalGroups:
        #            - 65542 # gladius:external-services

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.2.10142@sha256:aa84b8341e2b53281bcea4696427861e4ab02ab004cd76a1b3a76d77ea065ac5
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__LOG__LEVEL: info

              RADARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: api_key
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__ANALYTICSENABLED: "False"
              RADARR__LOG__DBENABLED: "False"
              RADARR__POSTGRES__HOST: postgres-rw.postgres.svc
              RADARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: postgres-${APP}
                    key: username
              RADARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: postgres-${APP}
                    key: password
              RADARR__POSTGRES__MAINDB: *app
              RADARR__SERVER__PORT: &port 7878
              RADARR__UPDATE__BRANCH: develop
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 20m
                memory: 384Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: *app
        ipFamilyPolicy: PreferDualStack
        ports:
          http:
            targetPort: *port
            port: 80

    route:
      app:
        hostnames: [ "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Radarr
          gethomepage.dev/icon: ${APP}.svg
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: "http://${APP}.media.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_${APP}_API_KEY}}\" }}"
        parentRefs:
          - name: internal
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80

    persistence:
      config:
        size: 1Gi
        accessMode: ReadWriteOnce

      media:
        existingClaim: media
        globalMounts:
          - path: /mnt/media

      cache:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /config/logs
            subPath: logs
