---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch

        #      initContainers:
        #        disable-ipv6:
        #          args:
        #            - -w
        #            - net.ipv6.conf.all.disable_ipv6=1
        #          command:
        #            - /bin/sysctl
        #          image:
        #            repository: docker.io/busybox
        #            tag: latest
        #            pullPolicy: IfNotPresent
        #          securityContext:
        #            privileged: true

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.5.5216@sha256:affb671fa367f4b7029d58f4b7d04e194e887ed6af1cf5a678f3c7aca5caf6ca
            env:
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__LOG__LEVEL: info

              PROWLARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: api_key
              PROWLARR__AUTH__METHOD: External
              PROWLARR__LOG__ANALYTICSENABLED: "False"
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__POSTGRES__HOST: postgres-rw.postgres.svc
              PROWLARR__POSTGRES__USER: *app
              PROWLARR__POSTGRES__MAINDB: *app
              PROWLARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-postgres"
                    key: password

              PROWLARR__SERVER__PORT: &port 9696
              PROWLARR__UPDATE__BRANCH: develop
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 18m
                memory: 128Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: prowlarr
        ipFamilyPolicy: PreferDualStack
        ports:
          http:
            targetPort: *port
            port: 80

    route:
      app:
        forceRename: *app
        hostnames: [ &host "{{ .Release.Name }}.${SECRET_DOMAIN}" ]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Prowlarr
          gethomepage.dev/icon: ${APP}.svg
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: "http://${APP}.media.svc"
          gethomepage.dev/widget.key: "{{ \"{{HOMEPAGE_VAR_${APP}_API_KEY}}\" }}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https

      api:
        hostnames: [ *host ]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /api
            backendRefs:
              - identifier: app
                port: 80
            timeouts:
              request: "300s"

    persistence:
      config:
        size: 1Gi
        accessMode: ReadWriteOnce

      cache:
        type: emptyDir
        globalMounts:
          - path: /tmp
            subPath: tmp
          - path: /config/logs
            subPath: logs
