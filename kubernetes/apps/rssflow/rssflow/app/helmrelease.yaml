---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rssflow
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        containers:
          app:
            image:
              repository: ghcr.io/m00nwtchr/rssflow
              tag: master@sha256:41c2c6e64aa185670ff9832ec81e821d8328ed888929ae10055304412e3ba653
            env:
              RUST_LOG: "info"
              REDIS_URL: redis://dragonfly.database.svc/10
              POSTGRES_URL:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-postgres"
                    key: url
            probes: &probes
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  grpc:
                    port: &port 50051
                  #                  service: ""
                  initialDelaySeconds: 5
                  periodSeconds: 10
              readiness: *probe
            resources:
              requests:
                cpu: 50m
                memory: 50Mi

      websub:
        containers:
          app: &container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-websub
              tag: master@sha256:7e563e2b7da5a8f62689df93cd6ab353feee204c9398b440e7f1b1e954eb2356
            env: &svc-env
              RUST_LOG: "info"
              REDIS_URL: redis://dragonfly.database.svc/10
              POSTGRES_URL: postgresql://rssflow@postgres-rw.postgres.svc/rssflow-websub?sslmode=verify-full&sslcert=/var/run/secrets/postgresql/tls.crt&sslkey=/var/run/secrets/postgresql/tls.key&sslrootcert=/var/run/secrets/postgresql/ca.crt
            probes: *probes
            resources:
              requests:
                cpu: 50m
                memory: 50Mi

      fetch:
        pod: &node-pod
          labels:
            app.kubernetes.io/component: node
        containers:
          app:
            <<: *container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-fetch
              tag: master@sha256:649d302a54ac52cdc169c3f2106af5b8f5da5f114fd6c3dcb24456be70fdde97
            env:
              <<: *svc-env
              SERVICE_URL: http://rssflow-fetch:50051/

      filter:
        pod: *node-pod
        containers:
          app:
            <<: *container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-filter
              tag: master@sha256:1148fb0d48758ffe5ca7bf6d176ec114d350f77e1ce5162e130087bc84be82af
            env:
              <<: *svc-env
              SERVICE_URL: http://rssflow-filter:50051/

      replace:
        pod: *node-pod
        containers:
          app:
            <<: *container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-replace
              tag: master@sha256:c066997851f2a744855e849acb4dda214b8842f9e8b13f00c2e35db7a56d121b
            env:
              <<: *svc-env
              SERVICE_URL: http://rssflow-replace:50051/

      retrieve:
        pod: *node-pod
        containers:
          app:
            <<: *container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-retrieve
              tag: master@sha256:746a6ff4dfb656fe14efc8b2c60f1c6df6e633abbf29592c32f98ddae0b2e332
            env:
              <<: *svc-env
              SERVICE_URL: http://rssflow-retrieve:50051/

      sanitize:
        pod: *node-pod
        containers:
          app:
            <<: *container
            image:
              repository: ghcr.io/m00nwtchr/rssflow-sanitize
              tag: master@sha256:df95de8adb03f130b9f8cf345fdd70441c91245e4fc5afbc10a4b674cb0649d8
            env:
              <<: *svc-env
              SERVICE_URL: http://rssflow-sanitize:50051/

    #    rbac:
    #      roles:
    #        rssflow:
    #          type: ClusterRole
    #          rules:
    #            - apiGroups:
    #                - ""
    #              resources:
    #                - services
    #              verbs:
    #                - get
    #                - list
    #                - watch
    #            - apiGroups:
    #                - discovery.k8s.io
    #              resources:
    #                - endpointslices
    #              verbs:
    #                - get
    #                - list
    #                - watch
    #
    #      bindings:
    #        rssflow:
    #          type: ClusterRoleBinding
    #          roleRef:
    #            identifier: rssflow
    #          subjects:
    #            - identifier: rssflow
    #
    #    serviceAccount:
    #      rssflow: { }

    service:
      rssflow:
        controller: rssflow
        ports:
          http:
            port: 80
            targetPort: 3434
          grpc:
            port: *port

      websub:
        controller: websub
        ports:
          http:
            port: 80
            targetPort: 3435
          grpc:
            port: *port

      fetch: &svc
        controller: fetch
        publishNotReadyAddresses: true
        ports:
          grpc:
            port: *port

      filter:
        <<: *svc
        controller: filter

      replace:
        <<: *svc
        controller: replace

      retrieve:
        <<: *svc
        controller: retrieve

      sanitize:
        <<: *svc
        controller: sanitize

    route:
      websub:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /websub/
            backendRefs:
              - identifier: websub
                port: 80
