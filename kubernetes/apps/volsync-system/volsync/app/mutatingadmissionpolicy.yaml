---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicybinding-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: volsync-mover-jitter
spec:
  policyName: volsync-mover-jitter
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicy-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: volsync-mover-jitter
  namespace: volsync-system
spec:
  matchConstraints:
    resourceRules:
      - apiGroups: ["batch"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["jobs"]
  matchConditions:
    - name: has-volsync-job-name-prefix
      expression: >
        object.metadata.name.startsWith("volsync-src-")
    - name: has-volsync-created-by-labels
      expression: >
        object.metadata.labels["app.kubernetes.io/created-by"] == "volsync"
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: JSONPatch
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "add", path: "/spec/template/spec/initContainers",
              value: []
            },
            JSONPatch{
              op: "add", path: "/spec/template/spec/initContainers/-",
              value: Object.spec.template.spec.initContainers{
                name: "jitter",
                image: "ghcr.io/home-operations/busybox:1.37.0@sha256:026ed7273270ec08f6902b4ae8334c23b473e5394bec3bbbdbfe580c710d50bc",
                imagePullPolicy: "IfNotPresent",
                command: ["sh", "-c", "sleep $(shuf -i 0-90 -n 1)"]
              }
            }
          ]
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicybinding-admissionregistration-v1beta1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: volsync-mover-rclone
spec:
  policyName: volsync-mover-rclone
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicy-admissionregistration-v1beta1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: volsync-mover-rclone
spec:
  matchConstraints:
    resourceRules:
      - apiGroups:
          - batch
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobs
  matchConditions:
    - name: has-volsync-job-name-prefix
      expression: >-
        object.metadata.name.startsWith("volsync-")

    - name: in-media-namespace
      expression: >-
        object.metadata.namespace == "media"

    - name: has-volsync-created-by-labels
      expression: >-
        object.metadata.labels["app.kubernetes.io/created-by"] == "volsync"

    - name: rclone-volume-does-not-exist
      expression: >-
        !object.spec.template.spec.volumes.exists(item, item.name == "rclone")

  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: JSONPatch
      jsonPatch:
        expression: >-
          [

            JSONPatch{
              op: "add", path: "/spec/template/spec/containers/0/volumeMounts/-",
              value: Object.spec.template.spec.containers.volumeMounts{
                name: "rclone-config",
                mountPath: "/.rclone.conf",
                subPath: "rclone.conf"
              }
            },
            JSONPatch{
              op: "add", path: "/spec/template/spec/containers/0/volumeMounts/-",
              value: Object.spec.template.spec.containers.volumeMounts{
                name: "rclone",
                mountPath: "/usr/local/bin/",
                subPath: "usr/local/sbin/"
              }
            },
            JSONPatch{
              op: "add", path: "/spec/template/spec/volumes/-",
              value: Object.spec.template.spec.volumes{
                name: "rclone-config",
                secret: Object.spec.template.spec.volumes.secret{
                  secretName: "volsync-mega-rclone-config"
                }
              }
            },
            JSONPatch{
              op: "add", path: "/spec/template/spec/volumes/-",
              value: Object.spec.template.spec.volumes{
                name: "rclone",
                image: Object.spec.template.spec.volumes.image{
                  reference: "docker.io/rclone/rclone:1.71.0@sha256:fd635aecd9667ee3c3bf920d14118090d4f2a83a080c1fa77e0bafbd4587ca87",
                  pullPolicy: "IfNotPresent"
                }
              }
            }
          ]
