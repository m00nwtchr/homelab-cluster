---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app continuwuity
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        seccompProfile:
          type: RuntimeDefault

    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: forgejo.ellis.link/continuwuation/continuwuity
              tag: main@sha256:21b2ce13c26d7d98c78a97862ae684ca40dd6019ff5cddde854a3f925834af5d
            env:
              CONDUWUIT_CONFIG: "/config/conduit.toml"
              CONDUWUIT_PORT: &port 8008
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /_matrix/federation/v1/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
            resources:
              limits:
                #                cpu: 50M
                memory: 1Gi
              requests:
                cpu: 2
                memory: 512Mi
            securityContext:
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: *port

    route:
      app:
        hostnames: [ "matrix.${SECRET_DOMAIN}" ]
        forceRename: *app
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - identifier: app
                port: 80
          - matches:
              - path:
                  type: Exact
                  value: /.well-known/matrix/client
            backendRefs:
              - identifier: app
                port: 80
            filters:
              - type: ExtensionRef
                extensionRef:
                  group: gateway.envoyproxy.io
                  kind: HTTPRouteFilter
                  name: well-known-matrix-client

      federation:
        hostnames: [ "matrix-fed.${SECRET_DOMAIN}" ]
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80
      well-known:
        hostnames: [ "${SECRET_DOMAIN}" ]
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /.well-known/matrix/
            backendRefs:
              - identifier: app
                port: 80
          - matches:
              - path:
                  type: Exact
                  value: /.well-known/matrix/client
            backendRefs:
              - identifier: app
                port: 80
            filters:
              - type: ExtensionRef
                extensionRef:
                  group: gateway.envoyproxy.io
                  kind: HTTPRouteFilter
                  name: well-known-matrix-client

    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app

      media:
        size: 5Gi
        accessMode: ReadWriteOnce
        storageClass: zfs-vault
        suffix: "media"
        retain: true
        globalMounts:
          - path: /data/media

      backups:
        size: 5Gi
        accessMode: ReadWriteOnce
        suffix: "backups"
        globalMounts:
          - path: /backups

      config:
        type: configMap
        name: conduit-configmap
        globalMounts:
          - path: /config/conduit.toml
            subPath: conduit.toml
      token:
        type: secret
        name: conduit-registration-secret
        globalMounts:
          - path: /config/token
            subPath: token
