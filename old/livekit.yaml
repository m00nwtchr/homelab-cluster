apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: livekit
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: kubernetes
  source:
    repoURL: https://helm.livekit.io
    chart: livekit-server
    targetRevision: 1.9.0
    helm:
      valuesObject:
        replicaCount: 1

        # Suggested value for gracefully terminate the pod: 5 hours
        # terminationGracePeriodSeconds: 18000

        livekit:
          port: 7880
          prometheus:
            port: 6789
          log_level: info

          rtc:
            tcp_port: 7881
            port_range_start: 50000
            port_range_end: 60000
            use_external_ip: false
            enable_loopback_candidate: false
          redis:
            address: dragonfly.database.svc:6379
            db: 11
          turn:
            enabled: true
            domain: turn.{{ .Values.domain }}
            tls_port: 5349
            udp_port: 3478
            external_tls: true

          # one or more API key/secret pairs
          # see https://docs.livekit.io/guides/getting-started/#generate-api-key-and-secret
          keys:
            myapikey: "rohng8bi8aepaeQu4saibohsied0uu4cahzuaJe7aiThoong0hae8shoceishuew8yauweit"

        turnLoadBalancer:
          enable: false

        resources:
          {}
          # Due to port restrictions, you can run only one instance of LiveKit per physical
          # node. Because of that, we recommend giving it plenty of resources to work with
          # limits:
          #   cpu: 6000m
          #   memory: 2048Mi
          # requests:
          #   cpu: 4000m
          #   memory: 1024Mi
  destination:
    name: in-cluster
    namespace: matrix
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "livekit-{{ include "domainDashed" . }}"
  namespace: matrix
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  secretName: "livekit-{{ include "domainDashed" . }}-tls"
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - "livekit.{{ .Values.domain }}"
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
---
# TURN: full TLS passthrough, routed by SNI
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: livekit-turn
  namespace: matrix
spec:
  entryPoints:
    - websecure
  routes:
    - match: HostSNI(`turn.m00nlit.dev`)
      services:
        - name: livekit-livekit-server-turn
          port: 5349
---
# LiveKit HTTP/1.1 console & API
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: livekit-api
  namespace: matrix
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`livekit.m00nlit.dev`)
      kind: Rule
      services:
        - name: livekit-livekit-server
          port: http
